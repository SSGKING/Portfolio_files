#version 430
in vec3 v_worldpos;
in vec3 v_normal;
out vec4 color;

layout(binding=0) uniform sampler2DArray tex;

#define WATER_COLOR vec3(0.2,0.2,0.6)
#define SKY_COLOR vec3(0.8,0.8,1.0)

void main(){
    vec3 N = normalize(v_normal);
    vec3 V = normalize(eyePos-v_worldpos);
    float cos_theta_i = clamp(dot(V,N),0.0,1.0);
    float cos_theta_r = sqrt(1.0 - (1.0 - cos_theta_i*cos_theta_i)/1.7689);
    float v_3 = (1.33 * cos_theta_r - cos_theta_i)/(1.33 * cos_theta_r + cos_theta_i);
    float v_4 = (cos_theta_r - 1.33 * cos_theta_i)/(cos_theta_r + 1.33 * cos_theta_i);
    //r=percent reflected
    float r = ( v_3*v_3 + v_4*v_4)/2;
    //amount transmitted
    float t = 1.0-r;
    vec2 tc = gl_FragCoord.xy / waterScreenSize;
    tc = tc + 0.01 * N.xz;
    tc = clamp( tc, vec2(0.0), vec2(1.0) );
    vec3 underwaterObjects = texture(tex, vec3(tc,0.0) ).rgb;
    color.rgb = t*mix(WATER_COLOR,underwaterObjects,0.5) + r*SKY_COLOR;
    color.a = 1.0;


}
